
import 'dotenv/config';
import { migrate } from 'drizzle-orm/neon-serverless/migrator';
import { Pool, neonConfig } from '@neondatabase/serverless';
import { drizzle } from 'drizzle-orm/neon-serverless';
import ws from "ws";

neonConfig.webSocketConstructor = ws;

async function runMigrations() {
  // For√ßa NODE_ENV para production se n√£o estiver definido
  if (!process.env.NODE_ENV) {
    process.env.NODE_ENV = 'production';
  }

  const dbUrl = process.env.PROD_DATABASE_URL || process.env.DATABASE_URL;
  
  if (!dbUrl) {
    console.error('‚ùå Erro: DATABASE_URL n√£o est√° definida!');
    console.log('Configure a vari√°vel de ambiente DATABASE_URL com a string de conex√£o do seu banco PostgreSQL de produ√ß√£o.');
    console.log('Exemplo: DATABASE_URL="postgresql://user:password@host:5432/database"');
    throw new Error('PROD_DATABASE_URL ou DATABASE_URL deve estar definida');
  }

  console.log('üîó URL do banco:', dbUrl.replace(/:[^:]*@/, ':***@')); // Oculta a senha no log

  console.log('Conectando ao banco de dados de produ√ß√£o...');
  
  const pool = new Pool({ connectionString: dbUrl });
  const db = drizzle({ client: pool });

  console.log('Executando migra√ß√µes...');
  
  try {
    await migrate(db, { migrationsFolder: './migrations' });
    console.log('‚úÖ Migra√ß√µes executadas com sucesso!');
  } catch (error) {
    console.error('‚ùå Erro ao executar migra√ß√µes:', error);
    throw error;
  } finally {
    await pool.end();
    console.log('Conex√£o fechada.');
  }
}

runMigrations().catch((error) => {
  console.error('Falha na migra√ß√£o:', error);
  process.exit(1);
});
